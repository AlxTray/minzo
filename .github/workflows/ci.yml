name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  lint-and-test-services:
    name: Lint and test services
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.13', '3.14', '3.15']
        poetry-version: ['2.2.1']
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          poetry install --sync --all-extras --with dev
      - name: Lint with black
        run: |
          poetry run black ./src --check
      - name: Lint with mypy
        run: |
          poetry run mypy ./src
      - name: Lint with flake8
        run: |
          poetry run flake8 ./src
      - name: Lint with isort
        run: |
          poetry run isort ./src --check
      - name: Check poetry lock file
        run: |
          poetry lock --check
  lint-and-test-website:
    name: Lint and test website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - run: npx playwright install --with-deps

      - run: npx nx run-many -t lint test build e2e

      - run: npx nx fix-ci
        if: always()
